name: Production Deploy

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # envsubst 설치
      - name: Install envsubst
        run: sudo apt-get install -y gettext

      # application.yml 템플릿 생성
      - name: Create application.yml.template
        run: |
          mkdir -p src/main/resources
          cat > src/main/resources/application.yml.template <<EOL
          server:
            port: 5000
            servlet:
              encoding:
                charset: UTF-8
                force: true

          spring:
            application:
              name: Salad-be-server

            datasource:
              driver-class-name: org.mariadb.jdbc.Driver
              url: jdbc:mariadb://\${RDS_HOSTNAME}:\${RDS_PORT}/\${RDS_DB_NAME}
              username: \${RDS_USERNAME}
              password: \${RDS_PASSWORD}

            jpa:
              hibernate:
                ddl-auto: none
              show-sql: true
              database: mysql
              properties:
                hibernate:
                  '[format_sql]': true

            mail:
              host: smtp.naver.com
              port: 465
              username: \${MAIL_USERNAME}
              password: \${MAIL_PASSWORD}
              properties:
                mail:
                  smtp:
                    auth: true
                    ssl:
                      enable: true

            data:
              redis:
                host: \${REDIS_HOST}
                port: \${REDIS_PORT}

            servlet:
              multipart:
                max-file-size: 30MB
                max-request-size: 30MB

            logging:
              level:
                org.hibernate.SQL: DEBUG
                org.hibernate.type.descriptor.sql.BasicBinder: TRACE

          file:
            upload:
              dir: \${UPLOAD_DIR}

          mybatis:
            mapper-locations: classpath:mapper/*.xml
            configuration:
              map-underscore-to-camel-case: true

          token:
            secret: \${JWT_SECRET}
            access-token-expiration: 1800000
            refresh-token-expiration: 604800000

          salad:
            frontend:
              reset-url: \${RESET_PASSWORD_URL}

          cloud:
            aws:
              s3:
                bucket: \${AWS_S3_BUCKET}
              region:
                static: ap-northeast-2
              credentials:
                access-key: \${AWS_ACCESS_KEY}
                secret-key: \${AWS_SECRET_KEY}
          EOL

      # 실제 환경 변수로 치환
      - name: Generate application.yml from template
        run: |
          envsubst < src/main/resources/application.yml.template > src/main/resources/application.yml
          echo "application.yml generated"
        env:
          RDS_HOSTNAME: ${{ secrets.RDS_HOSTNAME }}
          RDS_PORT: ${{ secrets.RDS_PORT }}
          RDS_DB_NAME: ${{ secrets.RDS_DB_NAME }}
          RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
          RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
          MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
          MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          UPLOAD_DIR: ${{ secrets.UPLOAD_DIR }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          RESET_PASSWORD_URL: ${{ secrets.RESET_PASSWORD_URL }}
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      - name: Package for Beanstalk
        run: |
          mkdir -p deploy
          cp build/libs/*.jar deploy/application.jar
          cp Procfile deploy/Procfile
          cp -r .ebextensions deploy/.ebextensions
          cp -r .platform deploy/.platform
          cd deploy && zip -r deploy.zip .

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: salad-be
          environment_name: Salad-be-env
          version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
          region: ap-northeast-2
          deployment_package: deploy/deploy.zip
          use_existing_version_if_available: false
          wait_for_deployment: true
          wait_for_environment_recovery: 300
