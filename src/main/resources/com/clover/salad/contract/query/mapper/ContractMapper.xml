<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.clover.salad.contract.query.mapper.ContractMapper">

    <resultMap id="ContractResultMap" type="com.clover.salad.contract.query.dto.ContractDTO">
        <id property="id" column="id"/>
        <result property="code" column="code"/>
        <result property="createdAt" column="created_at"/>
        <result property="startDate" column="start_date"/>
        <result property="endDate" column="end_date"/>
        <result property="status" column="status"/>
        <result property="amount" column="amount"/>
        <result property="bankName" column="bank_name"/>
        <result property="bankAccount" column="bank_account"/>
        <result property="paymentDay" column="payment_day"/>
        <result property="depositOwner" column="deposit_owner"/>
        <result property="paymentEmail" column="payment_email"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="etc" column="etc"/>
        <result property="employeeName" column="employee_name"/>
        <result property="customerName" column="customer_name"/>
        <result property="productNames" column="product_names"/>
    </resultMap>

    <resultMap id="ContractDetailResultMap" type="com.clover.salad.contract.query.dto.ContractResponseDTO">
        <id property="id" column="id"/>
        <result property="renameFile" column="rename_file"/>
        <result property="code" column="code"/>
        <result property="amount" column="amount"/>

        <association property="customer" javaType="com.clover.salad.contract.query.dto.CustomerResponseDTO">
            <result property="name" column="name"/>
            <result property="address" column="address"/>
            <result property="phone" column="phone"/>
        </association>

        <association property="employee" javaType="com.clover.salad.contract.query.dto.EmployeeResponseDTO">
            <result property="name" column="employee_name"/>
        </association>

        <association property="product" javaType="com.clover.salad.contract.query.dto.ProductResponseDTO">
            <result property="name" column="product_name"/>
            <result property="serialNumber" column="serial_number"/>
            <result property="quantity" column="quantity"/>
            <result property="rentalCost" column="rental_cost"/>
        </association>

        <association property="approval" javaType="com.clover.salad.contract.query.dto.ApprovalResponseDTO">
            <result property="title" column="aprv_title"/>
            <result property="content" column="aprv_content"/>
            <result property="state" column="aprv_state"/>
            <result property="reqId" column="req_id"/>
            <result property="aprvId" column="aprv_id"/>
        </association>
    </resultMap>



    <select id="selectContractInfo" parameterType="int" resultMap="ContractResultMap">
        SELECT
            c.id,
            c.code,
            c.created_at,
            c.start_date,
            c.end_date,
            c.status,
            c.amount,
            c.bank_name,
            c.bank_account,
            c.payment_day,
            c.deposit_owner,
            c.relationship,
            c.payment_email,
            c.is_deleted,
            c.etc,

            e.name AS employee_name,
            cu.name AS customer_name,

            GROUP_CONCAT(p.name SEPARATOR ', ') AS product_names

        FROM contract c
                 JOIN employee e ON c.employee_id = e.id
                 JOIN customer cu ON c.customer_id = cu.id
                 LEFT JOIN contract_product cp ON c.id = cp.contract_id
                 LEFT JOIN product p ON cp.product_id = p.id

        WHERE c.employee_id = #{employeeId}
        AND NOT c.is_deleted
        GROUP BY c.id
    </select>


    <select id="searchContracts" parameterType="com.clover.salad.contract.query.dto.ContractSearchDTO" resultMap="ContractResultMap">
        SELECT
        c.id,
        c.code,
        c.created_at,
        c.start_date,
        c.end_date,
        c.status,
        c.amount,
        c.bank_name,
        c.bank_account,
        c.payment_day,
        c.deposit_owner,
        c.relationship,
        c.payment_email,
        c.is_deleted,
        c.etc,
        e.name AS employee_name,
        cu.name AS customer_name,
        GROUP_CONCAT(p.name SEPARATOR ', ') AS product_names
        FROM contract c
        JOIN employee e ON c.employee_id = e.id
        JOIN customer cu ON c.customer_id = cu.id
        LEFT JOIN contract_product cp ON c.id = cp.contract_id
        LEFT JOIN product p ON cp.product_id = p.id
        <where>
            NOT c.is_deleted
            <if test="employeeId != null">AND c.employee_id = #{employeeId}</if>

            <if test="code != null and code != ''">
                AND c.code LIKE CONCAT('%', #{code}, '%')
            </if>

            <if test="createdAtStart != null and createdAtEnd != null">
                AND c.created_at BETWEEN #{createdAtStart} AND #{createdAtEnd}
            </if>

            <if test="startDateStart != null and startDateEnd != null">
                AND c.start_date BETWEEN #{startDateStart} AND #{startDateEnd}
            </if>

            <if test="endDateStart != null and endDateEnd != null">
                AND c.end_date BETWEEN #{endDateStart} AND #{endDateEnd}
            </if>

            <if test="status != null and status != ''">
                AND c.status = #{status}
            </if>

            <if test="bankName != null and bankName != ''">
                AND c.bank_name LIKE CONCAT('%', #{bankName}, '%')
            </if>

            <if test="paymentDayStart != null and paymentDayEnd != null">
                AND c.payment_day BETWEEN #{paymentDayStart} AND #{paymentDayEnd}
            </if>

            <if test="depositOwner != null and depositOwner != ''">
                AND c.deposit_owner LIKE CONCAT('%', #{depositOwner}, '%')
            </if>

            <if test="relationship != null and relationship != ''">
                AND c.relationship = #{relationship}
            </if>

            <if test="employeeName != null and employeeName != ''">
                AND e.name LIKE CONCAT('%', #{employeeName}, '%')
            </if>

            <if test="customerName != null and customerName != ''">
                AND cu.name LIKE CONCAT('%', #{customerName}, '%')
            </if>

            <if test="productName != null and productName != ''">
                AND EXISTS (
                SELECT 1 FROM contract_product cp2
                JOIN product p2 ON cp2.product_id = p2.id
                WHERE cp2.contract_id = c.id
                AND p2.name LIKE CONCAT('%', #{productName}, '%')
                )
            </if>
        </where>
        GROUP BY c.id
    </select>

    <select id="selectDetailContractInfo" parameterType="int" resultMap="ContractDetailResultMap">
        SELECT
            c.id,
            f.rename_file,
            c.code,
            c.amount,

            cu.name AS name,
            cu.address AS address,
            cu.phone AS phone,

            e.name AS employee_name,

            a.title AS aprv_title,
            a.content AS aprv_content,
            a.state AS aprv_state,
            a.req_id,
            a.aprv_id,

            p.name AS product_name,
            p.serial_number,
            cp.quantity,
            p.rental_cost

        FROM contract c
                 JOIN customer cu ON c.customer_id = cu.id
                 JOIN employee e ON c.employee_id = e.id
                 LEFT JOIN approval a ON a.contract_id = c.id
                 LEFT JOIN contract_product cp ON cp.contract_id = c.id
                 LEFT JOIN product p ON p.id = cp.product_id
                 LEFT JOIN document_origin d ON c.document_origin_id = d.id
                 LEFT JOIN file_upload f ON d.file_upload_id = f.id

        WHERE c.id = #{contractId}
    </select>


</mapper>
